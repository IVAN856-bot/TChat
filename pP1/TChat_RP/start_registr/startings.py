from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from Directory.database.data import DataBase
from Directory.keyboard.inline import shop
from aiogram import Router, F
import logging

router = Router(name=__name__)
logging.basicConfig(level=logging.INFO)

quote_buffer = {}
DB = DataBase()  # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ DataBase


@router.message(CommandStart())
async def start_cmd(message: Message):
    user_id = message.from_user.id
    DB.reg_user(user_id)

    user_first_name = message.from_user.first_name
    user_link = f"tg://user?id={user_id}"

    await message.reply(f"<b><a href='{user_link}'>{user_first_name}</a></b> –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")


@router.message(F.text.lower().startswith("–ø–æ–º–æ—â—å"))
@router.message(Command('help'))
async def help_cmd(message: Message):
    if message.chat.type != "private":
        return await message.reply("–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.")

    arg = message.text.split()
    if len(arg) == 1:
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ —Ä–∞–∑–¥–µ–ª–µ –ø–æ–º–æ—â–∏!\n"
                             f"\n–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å–æ –≤—Å–µ–º–∏ —Ä–ø-–∫–æ–º–∞–Ω–¥–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code>/help rp</code>\n"
                             f"\n–ë–æ—Ç —É–º–µ–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –µ—Å–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—É ‚Äú–ü—Ä–æ—Ñ–∏–ª—å‚Äù, "
                             f"–≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤–∞—à–∏–º –∏–≥—Ä–æ–≤—ã–º —Å—á–µ—Ç–æ–º, —Ç–∞–∫ –∂–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
                             f" –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.\n"
                             f"\n–ß—Ç–æ–±—ã –Ω–µ–º–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚Äú–§–∞—Ä–º‚Äù.\n"
                             f"\n–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –º–∞–≥–∞–∑–∏–Ω–æ–º: <code>/shop</code>")
    elif len(arg) == 2 and arg[1] in ["rp", "—Ä–ø"]:
        await message.answer("–í—Å–µ —Ä–ø-–∫–æ–º–∞–Ω–¥—ã –∑–∞ üß∂2:"
                             "\n–û–±–Ω—è—Ç—å, –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å, —É–¥–∞—Ä–∏—Ç—å, —É–∫—É—Å–∏—Ç—å, —Ö–≤–∞–ª–∏—Ç—å, "
                             "–∫–æ—Ä–º–∏—Ç—å, –ø–æ–≥–ª–∞–¥–∏—Ç—å, –ø–æ–∑–≤–∞—Ç—å, —Å—Ö–≤–∞—Ç–∏—Ç—å, –ø—Ä–∏–∑–Ω–∞—Ç—å—Å—è.\n"
                             "\n–í—Å–µ —Ä–ø-–∫–æ–º–∞–Ω–¥—ã –∑–∞ üß∂5:"
                             "\n–ú–∏–Ω–µ—Ç, –∫—É–Ω–∏, —Ç—Ä–∞—Ö–Ω—É—Ç—å, –ø–æ–ø–∞, –∞—Ö–µ–≥–∞–æ, "
                             "–≥—Ä—É–¥—å, —á–ª–µ–Ω, —Ä–∞–∑–¥–µ—Ç—å, –ø—Ä–∏–∂–∞—Ç—å, —à–ª–µ–ø–Ω—É—Ç—å.\n"
                             "\n–ü–æ–¥–ø–∏—Å–∫–∞ –∞–Ω–∏–º–µ —Å –∫—Ä—É—Ç—ã–º –¥–∏–∑–∞–π–Ω–æ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –≤—ã—à–µ –∫–æ–º–∞–Ω–¥—ã."
                             " –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—Ä—É—Ç–æ–π –¥–∏–∑–∞–π–Ω —Ä–ø-–∫–æ–º–∞–Ω–¥ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–∏—Å–∞—Ç—å –≤ –Ω–∞—á–∞–ª–µ –∫–æ–º–∞–Ω–¥—ã '@'.\n"
                             "\n–ü—Ä–∏–º–µ—Ä: '@–û–±–Ω—è—Ç—å'.")


@router.message(Command('shop'))
async def shop_cmd(message: Message):
    if message.chat.type != "private":
        await message.reply("–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.")

    else:
        await message.answer(
            text="–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤, –æ–¥–Ω–∞–∫–æ –≤—ã –º–æ–∂–µ—Ç–µ "
                 "—É—Ç–æ—á–Ω–∏—Ç—å –∫–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã –∏–º–µ—é—Ç—Å—è –º–æ–∂–Ω–æ –ø–æ —ç—Ç–æ–º—É –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É @shop_TChat",
            reply_markup=shop())
